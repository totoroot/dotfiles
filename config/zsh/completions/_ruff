#compdef ruff

# ruff generate-shell-completion zsh > ~/.config/dotfiles/config/zsh/completions/_ruff

autoload -U is-at-least

_ruff() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_ruff_commands" \
"*::: :->ruff" \
&& ret=0
    case $state in
    (ruff)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ruff-command-$line[1]:"
        case $line[1] in
            (check)
_arguments "${_arguments_options[@]}" : \
'--output-format=[Output serialization format for violations. The default serialization format is "full"]:OUTPUT_FORMAT:(concise full json json-lines junit grouped github gitlab pylint rdjson azure sarif)' \
'-o+[Specify file to write the linter output to (default\: stdout)]:OUTPUT_FILE:_files' \
'--output-file=[Specify file to write the linter output to (default\: stdout)]:OUTPUT_FILE:_files' \
'--target-version=[The minimum Python version that should be supported]:TARGET_VERSION:(py37 py38 py39 py310 py311 py312 py313 py314)' \
'*--select=[Comma-separated list of rule codes to enable (or ALL, to enable all rules)]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--ignore=[Comma-separated list of rule codes to disable]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--extend-select=[Like --select, but adds additional rule codes on top of those already specified]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--extend-ignore=[Like --ignore. (Deprecated\: You can just use --ignore instead.)]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--per-file-ignores=[List of mappings from file pattern to code to exclude]:PER_FILE_IGNORES:_default' \
'*--extend-per-file-ignores=[Like \`--per-file-ignores\`, but adds additional ignores on top of those already specified]:EXTEND_PER_FILE_IGNORES:_default' \
'*--exclude=[List of paths, used to omit files and/or directories from analysis]:FILE_PATTERN:_default' \
'*--extend-exclude=[Like --exclude, but adds additional files and directories on top of those already excluded]:FILE_PATTERN:_default' \
'*--fixable=[List of rule codes to treat as eligible for fix. Only applicable when fix itself is enabled (e.g., via \`--fix\`)]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--unfixable=[List of rule codes to treat as ineligible for fix. Only applicable when fix itself is enabled (e.g., via \`--fix\`)]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--extend-fixable=[Like --fixable, but adds additional rule codes on top of those already specified]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'*--extend-unfixable=[Like --unfixable. (Deprecated\: You can just use --unfixable instead.)]:RULE_CODE:((ALL\:"all rules"
AIR\:"Airflow"
ERA\:"eradicate"
FAST\:"FastAPI"
YTT\:"flake8-2020"
ANN\:"flake8-annotations"
ASYNC\:"flake8-async"
S\:"flake8-bandit"
BLE\:"flake8-blind-except"
FBT\:"flake8-boolean-trap"
B\:"flake8-bugbear"
A\:"flake8-builtins"
COM\:"flake8-commas"
C4\:"flake8-comprehensions"
CPY\:"flake8-copyright"
DTZ\:"flake8-datetimez"
T10\:"flake8-debugger"
DJ\:"flake8-django"
EM\:"flake8-errmsg"
EXE\:"flake8-executable"
FIX\:"flake8-fixme"
FA\:"flake8-future-annotations"
INT\:"flake8-gettext"
ISC\:"flake8-implicit-str-concat"
ICN\:"flake8-import-conventions"
LOG\:"flake8-logging"
G\:"flake8-logging-format"
INP\:"flake8-no-pep420"
PIE\:"flake8-pie"
T20\:"flake8-print"
PYI\:"flake8-pyi"
PT\:"flake8-pytest-style"
Q\:"flake8-quotes"
RSE\:"flake8-raise"
RET\:"flake8-return"
SLF\:"flake8-self"
SIM\:"flake8-simplify"
SLOT\:"flake8-slots"
TID\:"flake8-tidy-imports"
TD\:"flake8-todos"
TC\:"flake8-type-checking"
ARG\:"flake8-unused-arguments"
PTH\:"flake8-use-pathlib"
FLY\:"flynt"
I\:"isort"
C90\:"mccabe"
NPY\:"NumPy-specific rules"
PD\:"pandas-vet"
N\:"pep8-naming"
PERF\:"Perflint"
DOC\:"pydoclint"
D\:"pydocstyle"
F\:"Pyflakes"
PGH\:"pygrep-hooks"
PL\:"Pylint"
UP\:"pyupgrade"
FURB\:"refurb"
RUF\:"Ruff-specific rules"
TRY\:"tryceratops"
AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
'--line-length=[Set the line-length for length-associated rules and automatic formatting]:LINE_LENGTH:_default' \
'--dummy-variable-rgx=[Regular expression matching the name of dummy variables]:DUMMY_VARIABLE_RGX:_default' \
'--cache-dir=[Path to the cache directory]:CACHE_DIR:_files' \
'--stdin-filename=[The name of the file when passing it through stdin]:STDIN_FILENAME:_files' \
'*--extension=[List of mappings from file extension to language (one of \`python\`, \`ipynb\`, \`pyi\`). For example, to treat \`.ipy\` files as IPython notebooks, use \`--extension ipy\:ipynb\`]:EXTENSION:_default' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'--fix[Apply fixes to resolve lint violations. Use \`--no-fix\` to disable or \`--unsafe-fixes\` to include unsafe fixes]' \
'--no-fix[]' \
'--unsafe-fixes[Include fixes that may not retain the original intent of the code. Use \`--no-unsafe-fixes\` to disable]' \
'--no-unsafe-fixes[]' \
'--show-fixes[Show an enumeration of all fixed lint violations. Use \`--no-show-fixes\` to disable]' \
'--no-show-fixes[]' \
'(--show-fixes)--diff[Avoid writing any fixed files back; instead, output a diff for each changed file to stdout, and exit 0 if there are no diffs. Implies \`--fix-only\`]' \
'-w[Run in watch mode by re-running whenever files change]' \
'--watch[Run in watch mode by re-running whenever files change]' \
'--fix-only[Apply fixes to resolve lint violations, but don'\''t report on, or exit non-zero for, leftover violations. Implies \`--fix\`. Use \`--no-fix-only\` to disable or \`--unsafe-fixes\` to include unsafe fixes]' \
'--no-fix-only[]' \
'--ignore-noqa[Ignore any \`# noqa\` comments]' \
'--preview[Enable preview mode; checks will include unstable rules and fixes. Use \`--no-preview\` to disable]' \
'--no-preview[]' \
'--respect-gitignore[Respect file exclusions via \`.gitignore\` and other standard ignore files. Use \`--no-respect-gitignore\` to disable]' \
'--no-respect-gitignore[]' \
'--force-exclude[Enforce exclusions, even for paths passed to Ruff directly on the command-line. Use \`--no-force-exclude\` to disable]' \
'--no-force-exclude[]' \
'-n[Disable cache reads]' \
'--no-cache[Disable cache reads]' \
'(--exit-non-zero-on-fix)-e[Exit with status code "0", even upon detecting lint violations]' \
'(--exit-non-zero-on-fix)--exit-zero[Exit with status code "0", even upon detecting lint violations]' \
'(-e --exit-zero)--exit-non-zero-on-fix[Exit with a non-zero status code if any files were modified via fix, even if no lint violations remain]' \
'(--diff -w --watch)--statistics[Show counts for every rule with at least one violation]' \
'(--show-files --show-settings --ignore-noqa --statistics --stdin-filename -w --watch --fix)--add-noqa[Enable automatic additions of \`noqa\` directives to failing lines]' \
'(--add-noqa --show-settings --ignore-noqa --statistics --stdin-filename -w --watch)--show-files[See the files Ruff will be run against with the current settings]' \
'(--add-noqa --show-files --ignore-noqa --statistics --stdin-filename -w --watch)--show-settings[See the settings Ruff will use to lint a given Python file]' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
'*::files -- List of files or directories to check \[default\: .\]:_files' \
&& ret=0
;;
(rule)
_arguments "${_arguments_options[@]}" : \
'--output-format=[Output format]:OUTPUT_FORMAT:(text json)' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'()--all[Explain all rules]' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
'::rule -- Rule to explain:((AIR001\:"airflow-variable-name-task-id-mismatch"
AIR002\:"airflow-dag-no-schedule-argument"
AIR301\:"airflow3-removal"
AIR302\:"airflow3-moved-to-provider"
AIR311\:"airflow3-suggested-update"
AIR312\:"airflow3-suggested-to-move-to-provider"
ERA001\:"commented-out-code"
FAST001\:"fast-api-redundant-response-model"
FAST002\:"fast-api-non-annotated-dependency"
FAST003\:"fast-api-unused-path-parameter"
YTT101\:"sys-version-slice3"
YTT102\:"sys-version2"
YTT103\:"sys-version-cmp-str3"
YTT201\:"sys-version-info0-eq3"
YTT202\:"six-py3"
YTT203\:"sys-version-info1-cmp-int"
YTT204\:"sys-version-info-minor-cmp-int"
YTT301\:"sys-version0"
YTT302\:"sys-version-cmp-str10"
YTT303\:"sys-version-slice1"
ANN001\:"missing-type-function-argument"
ANN002\:"missing-type-args"
ANN003\:"missing-type-kwargs"
ANN101\:"missing-type-self"
ANN102\:"missing-type-cls"
ANN201\:"missing-return-type-undocumented-public-function"
ANN202\:"missing-return-type-private-function"
ANN204\:"missing-return-type-special-method"
ANN205\:"missing-return-type-static-method"
ANN206\:"missing-return-type-class-method"
ANN401\:"any-type"
ASYNC100\:"cancel-scope-no-checkpoint"
ASYNC105\:"trio-sync-call"
ASYNC109\:"async-function-with-timeout"
ASYNC110\:"async-busy-wait"
ASYNC115\:"async-zero-sleep"
ASYNC116\:"long-sleep-not-forever"
ASYNC210\:"blocking-http-call-in-async-function"
ASYNC220\:"create-subprocess-in-async-function"
ASYNC221\:"run-process-in-async-function"
ASYNC222\:"wait-for-process-in-async-function"
ASYNC230\:"blocking-open-call-in-async-function"
ASYNC251\:"blocking-sleep-in-async-function"
S101\:"assert"
S102\:"exec-builtin"
S103\:"bad-file-permissions"
S104\:"hardcoded-bind-all-interfaces"
S105\:"hardcoded-password-string"
S106\:"hardcoded-password-func-arg"
S107\:"hardcoded-password-default"
S108\:"hardcoded-temp-file"
S110\:"try-except-pass"
S112\:"try-except-continue"
S113\:"request-without-timeout"
S201\:"flask-debug-true"
S202\:"tarfile-unsafe-members"
S301\:"suspicious-pickle-usage"
S302\:"suspicious-marshal-usage"
S303\:"suspicious-insecure-hash-usage"
S304\:"suspicious-insecure-cipher-usage"
S305\:"suspicious-insecure-cipher-mode-usage"
S306\:"suspicious-mktemp-usage"
S307\:"suspicious-eval-usage"
S308\:"suspicious-mark-safe-usage"
S310\:"suspicious-url-open-usage"
S311\:"suspicious-non-cryptographic-random-usage"
S312\:"suspicious-telnet-usage"
S313\:"suspicious-xmlc-element-tree-usage"
S314\:"suspicious-xml-element-tree-usage"
S315\:"suspicious-xml-expat-reader-usage"
S316\:"suspicious-xml-expat-builder-usage"
S317\:"suspicious-xml-sax-usage"
S318\:"suspicious-xml-mini-dom-usage"
S319\:"suspicious-xml-pull-dom-usage"
S320\:"suspicious-xmle-tree-usage"
S321\:"suspicious-ftp-lib-usage"
S323\:"suspicious-unverified-context-usage"
S324\:"hashlib-insecure-hash-function"
S401\:"suspicious-telnetlib-import"
S402\:"suspicious-ftplib-import"
S403\:"suspicious-pickle-import"
S404\:"suspicious-subprocess-import"
S405\:"suspicious-xml-etree-import"
S406\:"suspicious-xml-sax-import"
S407\:"suspicious-xml-expat-import"
S408\:"suspicious-xml-minidom-import"
S409\:"suspicious-xml-pulldom-import"
S410\:"suspicious-lxml-import"
S411\:"suspicious-xmlrpc-import"
S412\:"suspicious-httpoxy-import"
S413\:"suspicious-pycrypto-import"
S415\:"suspicious-pyghmi-import"
S501\:"request-with-no-cert-validation"
S502\:"ssl-insecure-version"
S503\:"ssl-with-bad-defaults"
S504\:"ssl-with-no-version"
S505\:"weak-cryptographic-key"
S506\:"unsafe-yaml-load"
S507\:"ssh-no-host-key-verification"
S508\:"snmp-insecure-version"
S509\:"snmp-weak-cryptography"
S601\:"paramiko-call"
S602\:"subprocess-popen-with-shell-equals-true"
S603\:"subprocess-without-shell-equals-true"
S604\:"call-with-shell-equals-true"
S605\:"start-process-with-a-shell"
S606\:"start-process-with-no-shell"
S607\:"start-process-with-partial-path"
S608\:"hardcoded-sql-expression"
S609\:"unix-command-wildcard-injection"
S610\:"django-extra"
S611\:"django-raw-sql"
S612\:"logging-config-insecure-listen"
S701\:"jinja2-autoescape-false"
S702\:"mako-templates"
S704\:"unsafe-markup-use"
BLE001\:"blind-except"
FBT001\:"boolean-type-hint-positional-argument"
FBT002\:"boolean-default-value-positional-argument"
FBT003\:"boolean-positional-value-in-call"
B002\:"unary-prefix-increment-decrement"
B003\:"assignment-to-os-environ"
B004\:"unreliable-callable-check"
B005\:"strip-with-multi-characters"
B006\:"mutable-argument-default"
B007\:"unused-loop-control-variable"
B008\:"function-call-in-default-argument"
B009\:"get-attr-with-constant"
B010\:"set-attr-with-constant"
B011\:"assert-false"
B012\:"jump-statement-in-finally"
B013\:"redundant-tuple-in-exception-handler"
B014\:"duplicate-handler-exception"
B015\:"useless-comparison"
B016\:"raise-literal"
B017\:"assert-raises-exception"
B018\:"useless-expression"
B019\:"cached-instance-method"
B020\:"loop-variable-overrides-iterator"
B021\:"f-string-docstring"
B022\:"useless-contextlib-suppress"
B023\:"function-uses-loop-variable"
B024\:"abstract-base-class-without-abstract-method"
B025\:"duplicate-try-block-exception"
B026\:"star-arg-unpacking-after-keyword-arg"
B027\:"empty-method-without-abstract-decorator"
B028\:"no-explicit-stacklevel"
B029\:"except-with-empty-tuple"
B030\:"except-with-non-exception-classes"
B031\:"reuse-of-groupby-generator"
B032\:"unintentional-type-annotation"
B033\:"duplicate-value"
B034\:"re-sub-positional-args"
B035\:"static-key-dict-comprehension"
B039\:"mutable-contextvar-default"
B901\:"return-in-generator"
B903\:"class-as-data-structure"
B904\:"raise-without-from-inside-except"
B905\:"zip-without-explicit-strict"
B909\:"loop-iterator-mutation"
B911\:"batched-without-explicit-strict"
A001\:"builtin-variable-shadowing"
A002\:"builtin-argument-shadowing"
A003\:"builtin-attribute-shadowing"
A004\:"builtin-import-shadowing"
A005\:"stdlib-module-shadowing"
A006\:"builtin-lambda-argument-shadowing"
COM812\:"missing-trailing-comma"
COM818\:"trailing-comma-on-bare-tuple"
COM819\:"prohibited-trailing-comma"
C400\:"unnecessary-generator-list"
C401\:"unnecessary-generator-set"
C402\:"unnecessary-generator-dict"
C403\:"unnecessary-list-comprehension-set"
C404\:"unnecessary-list-comprehension-dict"
C405\:"unnecessary-literal-set"
C406\:"unnecessary-literal-dict"
C408\:"unnecessary-collection-call"
C409\:"unnecessary-literal-within-tuple-call"
C410\:"unnecessary-literal-within-list-call"
C411\:"unnecessary-list-call"
C413\:"unnecessary-call-around-sorted"
C414\:"unnecessary-double-cast-or-process"
C415\:"unnecessary-subscript-reversal"
C416\:"unnecessary-comprehension"
C417\:"unnecessary-map"
C418\:"unnecessary-literal-within-dict-call"
C419\:"unnecessary-comprehension-in-call"
C420\:"unnecessary-dict-comprehension-for-iterable"
CPY001\:"missing-copyright-notice"
DTZ001\:"call-datetime-without-tzinfo"
DTZ002\:"call-datetime-today"
DTZ003\:"call-datetime-utcnow"
DTZ004\:"call-datetime-utcfromtimestamp"
DTZ005\:"call-datetime-now-without-tzinfo"
DTZ006\:"call-datetime-fromtimestamp"
DTZ007\:"call-datetime-strptime-without-zone"
DTZ011\:"call-date-today"
DTZ012\:"call-date-fromtimestamp"
DTZ901\:"datetime-min-max"
T100\:"debugger"
DJ001\:"django-nullable-model-string-field"
DJ003\:"django-locals-in-render-function"
DJ006\:"django-exclude-with-model-form"
DJ007\:"django-all-with-model-form"
DJ008\:"django-model-without-dunder-str"
DJ012\:"django-unordered-body-content-in-model"
DJ013\:"django-non-leading-receiver-decorator"
EM101\:"raw-string-in-exception"
EM102\:"f-string-in-exception"
EM103\:"dot-format-in-exception"
EXE001\:"shebang-not-executable"
EXE002\:"shebang-missing-executable-file"
EXE003\:"shebang-missing-python"
EXE004\:"shebang-leading-whitespace"
EXE005\:"shebang-not-first-line"
FIX001\:"line-contains-fixme"
FIX002\:"line-contains-todo"
FIX003\:"line-contains-xxx"
FIX004\:"line-contains-hack"
FA100\:"future-rewritable-type-annotation"
FA102\:"future-required-type-annotation"
INT001\:"f-string-in-get-text-func-call"
INT002\:"format-in-get-text-func-call"
INT003\:"printf-in-get-text-func-call"
ISC001\:"single-line-implicit-string-concatenation"
ISC002\:"multi-line-implicit-string-concatenation"
ISC003\:"explicit-string-concatenation"
ICN001\:"unconventional-import-alias"
ICN002\:"banned-import-alias"
ICN003\:"banned-import-from"
LOG001\:"direct-logger-instantiation"
LOG002\:"invalid-get-logger-argument"
LOG004\:"log-exception-outside-except-handler"
LOG007\:"exception-without-exc-info"
LOG009\:"undocumented-warn"
LOG014\:"exc-info-outside-except-handler"
LOG015\:"root-logger-call"
G001\:"logging-string-format"
G002\:"logging-percent-format"
G003\:"logging-string-concat"
G004\:"logging-f-string"
G010\:"logging-warn"
G101\:"logging-extra-attr-clash"
G201\:"logging-exc-info"
G202\:"logging-redundant-exc-info"
INP001\:"implicit-namespace-package"
PIE790\:"unnecessary-placeholder"
PIE794\:"duplicate-class-field-definition"
PIE796\:"non-unique-enums"
PIE800\:"unnecessary-spread"
PIE804\:"unnecessary-dict-kwargs"
PIE807\:"reimplemented-container-builtin"
PIE808\:"unnecessary-range-start"
PIE810\:"multiple-starts-ends-with"
T201\:"print"
T203\:"p-print"
PYI001\:"unprefixed-type-param"
PYI002\:"complex-if-statement-in-stub"
PYI003\:"unrecognized-version-info-check"
PYI004\:"patch-version-comparison"
PYI005\:"wrong-tuple-length-version-comparison"
PYI006\:"bad-version-info-comparison"
PYI007\:"unrecognized-platform-check"
PYI008\:"unrecognized-platform-name"
PYI009\:"pass-statement-stub-body"
PYI010\:"non-empty-stub-body"
PYI011\:"typed-argument-default-in-stub"
PYI012\:"pass-in-class-body"
PYI013\:"ellipsis-in-non-empty-class-body"
PYI014\:"argument-default-in-stub"
PYI015\:"assignment-default-in-stub"
PYI016\:"duplicate-union-member"
PYI017\:"complex-assignment-in-stub"
PYI018\:"unused-private-type-var"
PYI019\:"custom-type-var-for-self"
PYI020\:"quoted-annotation-in-stub"
PYI021\:"docstring-in-stub"
PYI024\:"collections-named-tuple"
PYI025\:"unaliased-collections-abc-set-import"
PYI026\:"type-alias-without-annotation"
PYI029\:"str-or-repr-defined-in-stub"
PYI030\:"unnecessary-literal-union"
PYI032\:"any-eq-ne-annotation"
PYI033\:"type-comment-in-stub"
PYI034\:"non-self-return-type"
PYI035\:"unassigned-special-variable-in-stub"
PYI036\:"bad-exit-annotation"
PYI041\:"redundant-numeric-union"
PYI042\:"snake-case-type-alias"
PYI043\:"t-suffixed-type-alias"
PYI044\:"future-annotations-in-stub"
PYI045\:"iter-method-return-iterable"
PYI046\:"unused-private-protocol"
PYI047\:"unused-private-type-alias"
PYI048\:"stub-body-multiple-statements"
PYI049\:"unused-private-typed-dict"
PYI050\:"no-return-argument-annotation-in-stub"
PYI051\:"redundant-literal-union"
PYI052\:"unannotated-assignment-in-stub"
PYI053\:"string-or-bytes-too-long"
PYI054\:"numeric-literal-too-long"
PYI055\:"unnecessary-type-union"
PYI056\:"unsupported-method-call-on-all"
PYI057\:"byte-string-usage"
PYI058\:"generator-return-from-iter-method"
PYI059\:"generic-not-last-base-class"
PYI061\:"redundant-none-literal"
PYI062\:"duplicate-literal-member"
PYI063\:"pep484-style-positional-only-parameter"
PYI064\:"redundant-final-literal"
PYI066\:"bad-version-info-order"
PT001\:"pytest-fixture-incorrect-parentheses-style"
PT002\:"pytest-fixture-positional-args"
PT003\:"pytest-extraneous-scope-function"
PT004\:"pytest-missing-fixture-name-underscore"
PT005\:"pytest-incorrect-fixture-name-underscore"
PT006\:"pytest-parametrize-names-wrong-type"
PT007\:"pytest-parametrize-values-wrong-type"
PT008\:"pytest-patch-with-lambda"
PT009\:"pytest-unittest-assertion"
PT010\:"pytest-raises-without-exception"
PT011\:"pytest-raises-too-broad"
PT012\:"pytest-raises-with-multiple-statements"
PT013\:"pytest-incorrect-pytest-import"
PT014\:"pytest-duplicate-parametrize-test-cases"
PT015\:"pytest-assert-always-false"
PT016\:"pytest-fail-without-message"
PT017\:"pytest-assert-in-except"
PT018\:"pytest-composite-assertion"
PT019\:"pytest-fixture-param-without-value"
PT020\:"pytest-deprecated-yield-fixture"
PT021\:"pytest-fixture-finalizer-callback"
PT022\:"pytest-useless-yield-fixture"
PT023\:"pytest-incorrect-mark-parentheses-style"
PT024\:"pytest-unnecessary-asyncio-mark-on-fixture"
PT025\:"pytest-erroneous-use-fixtures-on-fixture"
PT026\:"pytest-use-fixtures-without-parameters"
PT027\:"pytest-unittest-raises-assertion"
PT028\:"pytest-parameter-with-default-argument"
PT029\:"pytest-warns-without-warning"
PT030\:"pytest-warns-too-broad"
PT031\:"pytest-warns-with-multiple-statements"
Q000\:"bad-quotes-inline-string"
Q001\:"bad-quotes-multiline-string"
Q002\:"bad-quotes-docstring"
Q003\:"avoidable-escaped-quote"
Q004\:"unnecessary-escaped-quote"
RSE102\:"unnecessary-paren-on-raise-exception"
RET501\:"unnecessary-return-none"
RET502\:"implicit-return-value"
RET503\:"implicit-return"
RET504\:"unnecessary-assign"
RET505\:"superfluous-else-return"
RET506\:"superfluous-else-raise"
RET507\:"superfluous-else-continue"
RET508\:"superfluous-else-break"
SLF001\:"private-member-access"
SIM101\:"duplicate-isinstance-call"
SIM102\:"collapsible-if"
SIM103\:"needless-bool"
SIM105\:"suppressible-exception"
SIM107\:"return-in-try-except-finally"
SIM108\:"if-else-block-instead-of-if-exp"
SIM109\:"compare-with-tuple"
SIM110\:"reimplemented-builtin"
SIM112\:"uncapitalized-environment-variables"
SIM113\:"enumerate-for-loop"
SIM114\:"if-with-same-arms"
SIM115\:"open-file-with-context-handler"
SIM116\:"if-else-block-instead-of-dict-lookup"
SIM117\:"multiple-with-statements"
SIM118\:"in-dict-keys"
SIM201\:"negate-equal-op"
SIM202\:"negate-not-equal-op"
SIM208\:"double-negation"
SIM210\:"if-expr-with-true-false"
SIM211\:"if-expr-with-false-true"
SIM212\:"if-expr-with-twisted-arms"
SIM220\:"expr-and-not-expr"
SIM221\:"expr-or-not-expr"
SIM222\:"expr-or-true"
SIM223\:"expr-and-false"
SIM300\:"yoda-conditions"
SIM401\:"if-else-block-instead-of-dict-get"
SIM905\:"split-static-string"
SIM910\:"dict-get-with-none-default"
SIM911\:"zip-dict-keys-and-values"
SLOT000\:"no-slots-in-str-subclass"
SLOT001\:"no-slots-in-tuple-subclass"
SLOT002\:"no-slots-in-namedtuple-subclass"
TID251\:"banned-api"
TID252\:"relative-imports"
TID253\:"banned-module-level-imports"
TD001\:"invalid-todo-tag"
TD002\:"missing-todo-author"
TD003\:"missing-todo-link"
TD004\:"missing-todo-colon"
TD005\:"missing-todo-description"
TD006\:"invalid-todo-capitalization"
TD007\:"missing-space-after-todo-colon"
TC001\:"typing-only-first-party-import"
TC002\:"typing-only-third-party-import"
TC003\:"typing-only-standard-library-import"
TC004\:"runtime-import-in-type-checking-block"
TC005\:"empty-type-checking-block"
TC006\:"runtime-cast-value"
TC007\:"unquoted-type-alias"
TC008\:"quoted-type-alias"
TC010\:"runtime-string-union"
ARG001\:"unused-function-argument"
ARG002\:"unused-method-argument"
ARG003\:"unused-class-method-argument"
ARG004\:"unused-static-method-argument"
ARG005\:"unused-lambda-argument"
PTH100\:"os-path-abspath"
PTH101\:"os-chmod"
PTH102\:"os-mkdir"
PTH103\:"os-makedirs"
PTH104\:"os-rename"
PTH105\:"os-replace"
PTH106\:"os-rmdir"
PTH107\:"os-remove"
PTH108\:"os-unlink"
PTH109\:"os-getcwd"
PTH110\:"os-path-exists"
PTH111\:"os-path-expanduser"
PTH112\:"os-path-isdir"
PTH113\:"os-path-isfile"
PTH114\:"os-path-islink"
PTH115\:"os-readlink"
PTH116\:"os-stat"
PTH117\:"os-path-isabs"
PTH118\:"os-path-join"
PTH119\:"os-path-basename"
PTH120\:"os-path-dirname"
PTH121\:"os-path-samefile"
PTH122\:"os-path-splitext"
PTH123\:"builtin-open"
PTH124\:"py-path"
PTH201\:"path-constructor-current-directory"
PTH202\:"os-path-getsize"
PTH203\:"os-path-getatime"
PTH204\:"os-path-getmtime"
PTH205\:"os-path-getctime"
PTH206\:"os-sep-split"
PTH207\:"glob"
PTH208\:"os-listdir"
PTH210\:"invalid-pathlib-with-suffix"
PTH211\:"os-symlink"
FLY002\:"static-join-to-f-string"
I001\:"unsorted-imports"
I002\:"missing-required-import"
C901\:"complex-structure"
NPY001\:"numpy-deprecated-type-alias"
NPY002\:"numpy-legacy-random"
NPY003\:"numpy-deprecated-function"
NPY201\:"numpy2-deprecation"
N801\:"invalid-class-name"
N802\:"invalid-function-name"
N803\:"invalid-argument-name"
N804\:"invalid-first-argument-name-for-class-method"
N805\:"invalid-first-argument-name-for-method"
N806\:"non-lowercase-variable-in-function"
N807\:"dunder-function-name"
N811\:"constant-imported-as-non-constant"
N812\:"lowercase-imported-as-non-lowercase"
N813\:"camelcase-imported-as-lowercase"
N814\:"camelcase-imported-as-constant"
N815\:"mixed-case-variable-in-class-scope"
N816\:"mixed-case-variable-in-global-scope"
N817\:"camelcase-imported-as-acronym"
N818\:"error-suffix-on-exception-name"
N999\:"invalid-module-name"
PD002\:"pandas-use-of-inplace-argument"
PD003\:"pandas-use-of-dot-is-null"
PD004\:"pandas-use-of-dot-not-null"
PD007\:"pandas-use-of-dot-ix"
PD008\:"pandas-use-of-dot-at"
PD009\:"pandas-use-of-dot-iat"
PD010\:"pandas-use-of-dot-pivot-or-unstack"
PD011\:"pandas-use-of-dot-values"
PD012\:"pandas-use-of-dot-read-table"
PD013\:"pandas-use-of-dot-stack"
PD015\:"pandas-use-of-pd-merge"
PD101\:"pandas-nunique-constant-series-check"
PD901\:"pandas-df-variable-name"
PERF101\:"unnecessary-list-cast"
PERF102\:"incorrect-dict-iterator"
PERF203\:"try-except-in-loop"
PERF401\:"manual-list-comprehension"
PERF402\:"manual-list-copy"
PERF403\:"manual-dict-comprehension"
E101\:"mixed-spaces-and-tabs"
E111\:"indentation-with-invalid-multiple"
E112\:"no-indented-block"
E113\:"unexpected-indentation"
E114\:"indentation-with-invalid-multiple-comment"
E115\:"no-indented-block-comment"
E116\:"unexpected-indentation-comment"
E117\:"over-indented"
E201\:"whitespace-after-open-bracket"
E202\:"whitespace-before-close-bracket"
E203\:"whitespace-before-punctuation"
E204\:"whitespace-after-decorator"
E211\:"whitespace-before-parameters"
E221\:"multiple-spaces-before-operator"
E222\:"multiple-spaces-after-operator"
E223\:"tab-before-operator"
E224\:"tab-after-operator"
E225\:"missing-whitespace-around-operator"
E226\:"missing-whitespace-around-arithmetic-operator"
E227\:"missing-whitespace-around-bitwise-or-shift-operator"
E228\:"missing-whitespace-around-modulo-operator"
E231\:"missing-whitespace"
E241\:"multiple-spaces-after-comma"
E242\:"tab-after-comma"
E251\:"unexpected-spaces-around-keyword-parameter-equals"
E252\:"missing-whitespace-around-parameter-equals"
E261\:"too-few-spaces-before-inline-comment"
E262\:"no-space-after-inline-comment"
E265\:"no-space-after-block-comment"
E266\:"multiple-leading-hashes-for-block-comment"
E271\:"multiple-spaces-after-keyword"
E272\:"multiple-spaces-before-keyword"
E273\:"tab-after-keyword"
E274\:"tab-before-keyword"
E275\:"missing-whitespace-after-keyword"
E301\:"blank-line-between-methods"
E302\:"blank-lines-top-level"
E303\:"too-many-blank-lines"
E304\:"blank-line-after-decorator"
E305\:"blank-lines-after-function-or-class"
E306\:"blank-lines-before-nested-definition"
E401\:"multiple-imports-on-one-line"
E402\:"module-import-not-at-top-of-file"
E501\:"line-too-long"
E502\:"redundant-backslash"
E701\:"multiple-statements-on-one-line-colon"
E702\:"multiple-statements-on-one-line-semicolon"
E703\:"useless-semicolon"
E711\:"none-comparison"
E712\:"true-false-comparison"
E713\:"not-in-test"
E714\:"not-is-test"
E721\:"type-comparison"
E722\:"bare-except"
E731\:"lambda-assignment"
E741\:"ambiguous-variable-name"
E742\:"ambiguous-class-name"
E743\:"ambiguous-function-name"
E902\:"io-error"
E999\:"syntax-error"
W191\:"tab-indentation"
W291\:"trailing-whitespace"
W292\:"missing-newline-at-end-of-file"
W293\:"blank-line-with-whitespace"
W391\:"too-many-newlines-at-end-of-file"
W505\:"doc-line-too-long"
W605\:"invalid-escape-sequence"
DOC201\:"docstring-missing-returns"
DOC202\:"docstring-extraneous-returns"
DOC402\:"docstring-missing-yields"
DOC403\:"docstring-extraneous-yields"
DOC501\:"docstring-missing-exception"
DOC502\:"docstring-extraneous-exception"
D100\:"undocumented-public-module"
D101\:"undocumented-public-class"
D102\:"undocumented-public-method"
D103\:"undocumented-public-function"
D104\:"undocumented-public-package"
D105\:"undocumented-magic-method"
D106\:"undocumented-public-nested-class"
D107\:"undocumented-public-init"
D200\:"unnecessary-multiline-docstring"
D201\:"blank-line-before-function"
D202\:"blank-line-after-function"
D203\:"incorrect-blank-line-before-class"
D204\:"incorrect-blank-line-after-class"
D205\:"missing-blank-line-after-summary"
D206\:"docstring-tab-indentation"
D207\:"under-indentation"
D208\:"over-indentation"
D209\:"new-line-after-last-paragraph"
D210\:"surrounding-whitespace"
D211\:"blank-line-before-class"
D212\:"multi-line-summary-first-line"
D213\:"multi-line-summary-second-line"
D214\:"overindented-section"
D215\:"overindented-section-underline"
D300\:"triple-single-quotes"
D301\:"escape-sequence-in-docstring"
D400\:"missing-trailing-period"
D401\:"non-imperative-mood"
D402\:"signature-in-docstring"
D403\:"first-word-uncapitalized"
D404\:"docstring-starts-with-this"
D405\:"non-capitalized-section-name"
D406\:"missing-new-line-after-section-name"
D407\:"missing-dashed-underline-after-section"
D408\:"missing-section-underline-after-name"
D409\:"mismatched-section-underline-length"
D410\:"no-blank-line-after-section"
D411\:"no-blank-line-before-section"
D412\:"blank-lines-between-header-and-content"
D413\:"missing-blank-line-after-last-section"
D414\:"empty-docstring-section"
D415\:"missing-terminal-punctuation"
D416\:"missing-section-name-colon"
D417\:"undocumented-param"
D418\:"overload-with-docstring"
D419\:"empty-docstring"
F401\:"unused-import"
F402\:"import-shadowed-by-loop-var"
F403\:"undefined-local-with-import-star"
F404\:"late-future-import"
F405\:"undefined-local-with-import-star-usage"
F406\:"undefined-local-with-nested-import-star-usage"
F407\:"future-feature-not-defined"
F501\:"percent-format-invalid-format"
F502\:"percent-format-expected-mapping"
F503\:"percent-format-expected-sequence"
F504\:"percent-format-extra-named-arguments"
F505\:"percent-format-missing-argument"
F506\:"percent-format-mixed-positional-and-named"
F507\:"percent-format-positional-count-mismatch"
F508\:"percent-format-star-requires-sequence"
F509\:"percent-format-unsupported-format-character"
F521\:"string-dot-format-invalid-format"
F522\:"string-dot-format-extra-named-arguments"
F523\:"string-dot-format-extra-positional-arguments"
F524\:"string-dot-format-missing-arguments"
F525\:"string-dot-format-mixing-automatic"
F541\:"f-string-missing-placeholders"
F601\:"multi-value-repeated-key-literal"
F602\:"multi-value-repeated-key-variable"
F621\:"expressions-in-star-assignment"
F622\:"multiple-starred-expressions"
F631\:"assert-tuple"
F632\:"is-literal"
F633\:"invalid-print-syntax"
F634\:"if-tuple"
F701\:"break-outside-loop"
F702\:"continue-outside-loop"
F704\:"yield-outside-function"
F706\:"return-outside-function"
F707\:"default-except-not-last"
F722\:"forward-annotation-syntax-error"
F811\:"redefined-while-unused"
F821\:"undefined-name"
F822\:"undefined-export"
F823\:"undefined-local"
F841\:"unused-variable"
F842\:"unused-annotation"
F901\:"raise-not-implemented"
PGH001\:"eval"
PGH002\:"deprecated-log-warn"
PGH003\:"blanket-type-ignore"
PGH004\:"blanket-noqa"
PGH005\:"invalid-mock-access"
PLC0105\:"type-name-incorrect-variance"
PLC0131\:"type-bivariance"
PLC0132\:"type-param-name-mismatch"
PLC0205\:"single-string-slots"
PLC0206\:"dict-index-missing-items"
PLC0207\:"missing-maxsplit-arg"
PLC0208\:"iteration-over-set"
PLC0414\:"useless-import-alias"
PLC0415\:"import-outside-top-level"
PLC1802\:"len-test"
PLC1901\:"compare-to-empty-string"
PLC2401\:"non-ascii-name"
PLC2403\:"non-ascii-import-name"
PLC2701\:"import-private-name"
PLC2801\:"unnecessary-dunder-call"
PLC3002\:"unnecessary-direct-lambda-call"
PLE0100\:"yield-in-init"
PLE0101\:"return-in-init"
PLE0115\:"nonlocal-and-global"
PLE0116\:"continue-in-finally"
PLE0117\:"nonlocal-without-binding"
PLE0118\:"load-before-global-declaration"
PLE0237\:"non-slot-assignment"
PLE0241\:"duplicate-bases"
PLE0302\:"unexpected-special-method-signature"
PLE0303\:"invalid-length-return-type"
PLE0304\:"invalid-bool-return-type"
PLE0305\:"invalid-index-return-type"
PLE0307\:"invalid-str-return-type"
PLE0308\:"invalid-bytes-return-type"
PLE0309\:"invalid-hash-return-type"
PLE0604\:"invalid-all-object"
PLE0605\:"invalid-all-format"
PLE0643\:"potential-index-error"
PLE0704\:"misplaced-bare-raise"
PLE1132\:"repeated-keyword-argument"
PLE1141\:"dict-iter-missing-items"
PLE1142\:"await-outside-async"
PLE1205\:"logging-too-many-args"
PLE1206\:"logging-too-few-args"
PLE1300\:"bad-string-format-character"
PLE1307\:"bad-string-format-type"
PLE1310\:"bad-str-strip-call"
PLE1507\:"invalid-envvar-value"
PLE1519\:"singledispatch-method"
PLE1520\:"singledispatchmethod-function"
PLE1700\:"yield-from-in-async-function"
PLE2502\:"bidirectional-unicode"
PLE2510\:"invalid-character-backspace"
PLE2512\:"invalid-character-sub"
PLE2513\:"invalid-character-esc"
PLE2514\:"invalid-character-nul"
PLE2515\:"invalid-character-zero-width-space"
PLE4703\:"modified-iterating-set"
PLR0124\:"comparison-with-itself"
PLR0133\:"comparison-of-constant"
PLR0202\:"no-classmethod-decorator"
PLR0203\:"no-staticmethod-decorator"
PLR0206\:"property-with-parameters"
PLR0402\:"manual-from-import"
PLR0904\:"too-many-public-methods"
PLR0911\:"too-many-return-statements"
PLR0912\:"too-many-branches"
PLR0913\:"too-many-arguments"
PLR0914\:"too-many-locals"
PLR0915\:"too-many-statements"
PLR0916\:"too-many-boolean-expressions"
PLR0917\:"too-many-positional-arguments"
PLR1701\:"repeated-isinstance-calls"
PLR1702\:"too-many-nested-blocks"
PLR1704\:"redefined-argument-from-local"
PLR1706\:"and-or-ternary"
PLR1711\:"useless-return"
PLR1714\:"repeated-equality-comparison"
PLR1716\:"boolean-chained-comparison"
PLR1722\:"sys-exit-alias"
PLR1730\:"if-stmt-min-max"
PLR1733\:"unnecessary-dict-index-lookup"
PLR1736\:"unnecessary-list-index-lookup"
PLR2004\:"magic-value-comparison"
PLR2044\:"empty-comment"
PLR5501\:"collapsible-else-if"
PLR6104\:"non-augmented-assignment"
PLR6201\:"literal-membership"
PLR6301\:"no-self-use"
PLW0108\:"unnecessary-lambda"
PLW0120\:"useless-else-on-loop"
PLW0127\:"self-assigning-variable"
PLW0128\:"redeclared-assigned-name"
PLW0129\:"assert-on-string-literal"
PLW0131\:"named-expr-without-context"
PLW0133\:"useless-exception-statement"
PLW0177\:"nan-comparison"
PLW0211\:"bad-staticmethod-argument"
PLW0244\:"redefined-slots-in-subclass"
PLW0245\:"super-without-brackets"
PLW0406\:"import-self"
PLW0602\:"global-variable-not-assigned"
PLW0603\:"global-statement"
PLW0604\:"global-at-module-level"
PLW0642\:"self-or-cls-assignment"
PLW0711\:"binary-op-exception"
PLW1501\:"bad-open-mode"
PLW1507\:"shallow-copy-environ"
PLW1508\:"invalid-envvar-default"
PLW1509\:"subprocess-popen-preexec-fn"
PLW1510\:"subprocess-run-without-check"
PLW1514\:"unspecified-encoding"
PLW1641\:"eq-without-hash"
PLW2101\:"useless-with-lock"
PLW2901\:"redefined-loop-name"
PLW3201\:"bad-dunder-method-name"
PLW3301\:"nested-min-max"
UP001\:"useless-metaclass-type"
UP003\:"type-of-primitive"
UP004\:"useless-object-inheritance"
UP005\:"deprecated-unittest-alias"
UP006\:"non-pep585-annotation"
UP007\:"non-pep604-annotation-union"
UP008\:"super-call-with-parameters"
UP009\:"utf8-encoding-declaration"
UP010\:"unnecessary-future-import"
UP011\:"lru-cache-without-parameters"
UP012\:"unnecessary-encode-utf8"
UP013\:"convert-typed-dict-functional-to-class"
UP014\:"convert-named-tuple-functional-to-class"
UP015\:"redundant-open-modes"
UP017\:"datetime-timezone-utc"
UP018\:"native-literals"
UP019\:"typing-text-str-alias"
UP020\:"open-alias"
UP021\:"replace-universal-newlines"
UP022\:"replace-stdout-stderr"
UP023\:"deprecated-c-element-tree"
UP024\:"os-error-alias"
UP025\:"unicode-kind-prefix"
UP026\:"deprecated-mock-import"
UP027\:"unpacked-list-comprehension"
UP028\:"yield-in-for-loop"
UP029\:"unnecessary-builtin-import"
UP030\:"format-literals"
UP031\:"printf-string-formatting"
UP032\:"f-string"
UP033\:"lru-cache-with-maxsize-none"
UP034\:"extraneous-parentheses"
UP035\:"deprecated-import"
UP036\:"outdated-version-block"
UP037\:"quoted-annotation"
UP038\:"non-pep604-isinstance"
UP039\:"unnecessary-class-parentheses"
UP040\:"non-pep695-type-alias"
UP041\:"timeout-error-alias"
UP042\:"replace-str-enum"
UP043\:"unnecessary-default-type-args"
UP044\:"non-pep646-unpack"
UP045\:"non-pep604-annotation-optional"
UP046\:"non-pep695-generic-class"
UP047\:"non-pep695-generic-function"
UP049\:"private-type-parameter"
UP050\:"useless-class-metaclass-type"
FURB101\:"read-whole-file"
FURB103\:"write-whole-file"
FURB105\:"print-empty-string"
FURB110\:"if-exp-instead-of-or-operator"
FURB113\:"repeated-append"
FURB116\:"f-string-number-format"
FURB118\:"reimplemented-operator"
FURB122\:"for-loop-writes"
FURB129\:"readlines-in-for"
FURB131\:"delete-full-slice"
FURB132\:"check-and-remove-from-set"
FURB136\:"if-expr-min-max"
FURB140\:"reimplemented-starmap"
FURB142\:"for-loop-set-mutations"
FURB145\:"slice-copy"
FURB148\:"unnecessary-enumerate"
FURB152\:"math-constant"
FURB154\:"repeated-global"
FURB156\:"hardcoded-string-charset"
FURB157\:"verbose-decimal-constructor"
FURB161\:"bit-count"
FURB162\:"fromisoformat-replace-z"
FURB163\:"redundant-log-base"
FURB164\:"unnecessary-from-float"
FURB166\:"int-on-sliced-str"
FURB167\:"regex-flag-alias"
FURB168\:"isinstance-type-none"
FURB169\:"type-none-comparison"
FURB171\:"single-item-membership-test"
FURB177\:"implicit-cwd"
FURB180\:"meta-class-abc-meta"
FURB181\:"hashlib-digest-hex"
FURB187\:"list-reverse-copy"
FURB188\:"slice-to-remove-prefix-or-suffix"
FURB189\:"subclass-builtin"
FURB192\:"sorted-min-max"
RUF001\:"ambiguous-unicode-character-string"
RUF002\:"ambiguous-unicode-character-docstring"
RUF003\:"ambiguous-unicode-character-comment"
RUF005\:"collection-literal-concatenation"
RUF006\:"asyncio-dangling-task"
RUF007\:"zip-instead-of-pairwise"
RUF008\:"mutable-dataclass-default"
RUF009\:"function-call-in-dataclass-default-argument"
RUF010\:"explicit-f-string-type-conversion"
RUF011\:"ruff-static-key-dict-comprehension"
RUF012\:"mutable-class-default"
RUF013\:"implicit-optional"
RUF015\:"unnecessary-iterable-allocation-for-first-element"
RUF016\:"invalid-index-type"
RUF017\:"quadratic-list-summation"
RUF018\:"assignment-in-assert"
RUF019\:"unnecessary-key-check"
RUF020\:"never-union"
RUF021\:"parenthesize-chained-operators"
RUF022\:"unsorted-dunder-all"
RUF023\:"unsorted-dunder-slots"
RUF024\:"mutable-fromkeys-value"
RUF026\:"default-factory-kwarg"
RUF027\:"missing-f-string-syntax"
RUF028\:"invalid-formatter-suppression-comment"
RUF029\:"unused-async"
RUF030\:"assert-with-print-message"
RUF031\:"incorrectly-parenthesized-tuple-in-subscript"
RUF032\:"decimal-from-float-literal"
RUF033\:"post-init-default"
RUF034\:"useless-if-else"
RUF035\:"ruff-unsafe-markup-use"
RUF036\:"none-not-at-end-of-union"
RUF037\:"unnecessary-empty-iterable-within-deque-call"
RUF038\:"redundant-bool-literal"
RUF039\:"unraw-re-pattern"
RUF040\:"invalid-assert-message-literal-argument"
RUF041\:"unnecessary-nested-literal"
RUF043\:"pytest-raises-ambiguous-pattern"
RUF045\:"implicit-class-var-in-dataclass"
RUF046\:"unnecessary-cast-to-int"
RUF047\:"needless-else"
RUF048\:"map-int-version-parsing"
RUF049\:"dataclass-enum"
RUF051\:"if-key-in-dict-del"
RUF052\:"used-dummy-variable"
RUF053\:"class-with-mixed-type-vars"
RUF054\:"indented-form-feed"
RUF055\:"unnecessary-regular-expression"
RUF056\:"falsy-dict-get-fallback"
RUF057\:"unnecessary-round"
RUF058\:"starmap-zip"
RUF059\:"unused-unpacked-variable"
RUF060\:"in-empty-collection"
RUF061\:"legacy-form-pytest-raises"
RUF100\:"unused-noqa"
RUF101\:"redirected-noqa"
RUF102\:"invalid-rule-code"
RUF200\:"invalid-pyproject-toml"
TRY002\:"raise-vanilla-class"
TRY003\:"raise-vanilla-args"
TRY004\:"type-check-without-type-error"
TRY200\:"reraise-no-cause"
TRY201\:"verbose-raise"
TRY203\:"useless-try-except"
TRY300\:"try-consider-else"
TRY301\:"raise-within-try"
TRY400\:"error-instead-of-exception"
TRY401\:"verbose-log-message"))' \
&& ret=0
;;
(config)
_arguments "${_arguments_options[@]}" : \
'--output-format=[Output format]:OUTPUT_FORMAT:(text json)' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
'::option -- Config key to show:((cache-dir\:"A path to the cache directory."
extend\:"A path to a local \`pyproject.toml\` file to merge into this configuration. User home directory and environment variables will be expanded."
output-format\:"The style in which violation messages should be formatted\: \`'\''full'\''\` (default) (shows source), \`'\''concise'\''\`, \`'\''grouped'\''\` (group messages by file), \`'\''json'\''\` (machine-readable), \`'\''junit'\''\` (machine-readable XML), \`'\''github'\''\` (GitHub Actions annotations), \`'\''gitlab'\''\` (GitLab CI code quality report), \`'\''pylint'\''\` (Pylint text format) or \`'\''azure'\''\` (Azure Pipeline logging commands)."
fix\:"Enable fix behavior by-default when running \`ruff\` (overridden by the \`--fix\` and \`--no-fix\` command-line flags). Only includes automatic fixes unless \`--unsafe-fixes\` is provided."
unsafe-fixes\:"Enable application of unsafe fixes. If excluded, a hint will be displayed when unsafe fixes are available. If set to false, the hint will be hidden."
fix-only\:"Like \[\`fix\`\](#fix), but disables reporting on leftover violation. Implies \[\`fix\`\](#fix)."
show-fixes\:"Whether to show an enumeration of all fixed lint violations (overridden by the \`--show-fixes\` command-line flag)."
required-version\:"Enforce a requirement on the version of Ruff, to enforce at runtime. If the version of Ruff does not meet the requirement, Ruff will exit with an error."
preview\:"Whether to enable preview mode. When preview mode is enabled, Ruff will use unstable rules, fixes, and formatting."
exclude\:"A list of file patterns to exclude from formatting and linting."
extend-exclude\:"A list of file patterns to omit from formatting and linting, in addition to those specified by \[\`exclude\`\](#exclude)."
extend-include\:"A list of file patterns to include when linting, in addition to those specified by \[\`include\`\](#include)."
force-exclude\:"Whether to enforce \[\`exclude\`\](#exclude) and \[\`extend-exclude\`\](#extend-exclude) patterns, even for paths that are passed to Ruff explicitly. Typically, Ruff will lint any paths passed in directly, even if they would typically be excluded. Setting \`force-exclude = true\` will cause Ruff to respect these exclusions unequivocally."
include\:"A list of file patterns to include when linting."
respect-gitignore\:"Whether to automatically exclude files that are ignored by \`.ignore\`, \`.gitignore\`, \`.git/info/exclude\`, and global \`gitignore\` files. Enabled by default."
builtins\:"A list of builtins to treat as defined references, in addition to the system builtins."
namespace-packages\:"Mark the specified directories as namespace packages. For the purpose of module resolution, Ruff will treat those directories and all their subdirectories as if they contained an \`__init__.py\` file."
target-version\:"The minimum Python version to target, e.g., when considering automatic code upgrades, like rewriting type annotations. Ruff will not propose changes using features that are not available in the given version."
per-file-target-version\:"A list of mappings from glob-style file pattern to Python version to use when checking the corresponding file(s)."
src\:"The directories to consider when resolving first- vs. third-party imports."
line-length\:"The line length to use when enforcing long-lines violations (like \`E501\`) and at which \`isort\` and the formatter prefers to wrap lines."
indent-width\:"The number of spaces per indentation level (tab)."
lint\:"Configures how Ruff checks your code."
lint.allowed-confusables\:"A list of allowed '\''confusable'\'' Unicode characters to ignore when enforcing \`RUF001\`, \`RUF002\`, and \`RUF003\`."
lint.dummy-variable-rgx\:"A regular expression used to identify '\''dummy'\'' variables, or those which should be ignored when enforcing (e.g.) unused-variable rules. The default expression matches \`_\`, \`__\`, and \`_var\`, but not \`_var_\`."
lint.extend-ignore\:"A list of rule codes or prefixes to ignore, in addition to those specified by \`ignore\`."
lint.extend-select\:"A list of rule codes or prefixes to enable, in addition to those specified by \[\`select\`\](#lint_select)."
lint.extend-fixable\:"A list of rule codes or prefixes to consider fixable, in addition to those specified by \[\`fixable\`\](#lint_fixable)."
lint.external\:"A list of rule codes or prefixes that are unsupported by Ruff, but should be preserved when (e.g.) validating \`# noqa\` directives. Useful for retaining \`# noqa\` directives that cover plugins not yet implemented by Ruff."
lint.fixable\:"A list of rule codes or prefixes to consider fixable. By default, all rules are considered fixable."
lint.ignore\:"A list of rule codes or prefixes to ignore. Prefixes can specify exact rules (like \`F841\`), entire categories (like \`F\`), or anything in between."
lint.extend-safe-fixes\:"A list of rule codes or prefixes for which unsafe fixes should be considered safe."
lint.extend-unsafe-fixes\:"A list of rule codes or prefixes for which safe fixes should be considered unsafe."
lint.ignore-init-module-imports\:"Avoid automatically removing unused imports in \`__init__.py\` files. Such imports will still be flagged, but with a dedicated message suggesting that the import is either added to the module'\''s \`__all__\` symbol, or re-exported with a redundant alias (e.g., \`import os as os\`)."
lint.logger-objects\:"A list of objects that should be treated equivalently to a \`logging.Logger\` object."
lint.select\:"A list of rule codes or prefixes to enable. Prefixes can specify exact rules (like \`F841\`), entire categories (like \`F\`), or anything in between."
lint.explicit-preview-rules\:"Whether to require exact codes to select preview rules. When enabled, preview rules will not be selected by prefixes — the full code of each preview rule will be required to enable the rule."
lint.task-tags\:"A list of task tags to recognize (e.g., '\''TODO'\'', '\''FIXME'\'', '\''XXX'\'')."
lint.typing-modules\:"A list of modules whose exports should be treated equivalently to members of the \`typing\` module."
lint.unfixable\:"A list of rule codes or prefixes to consider non-fixable."
lint.flake8-annotations\:"Options for the \`flake8-annotations\` plugin."
lint.flake8-annotations.mypy-init-return\:"Whether to allow the omission of a return type hint for \`__init__\` if at least one argument is annotated."
lint.flake8-annotations.suppress-dummy-args\:"Whether to suppress \`ANN000\`-level violations for arguments matching the '\''dummy'\'' variable regex (like \`_\`)."
lint.flake8-annotations.suppress-none-returning\:"Whether to suppress \`ANN200\`-level violations for functions that meet either of the following criteria\:"
lint.flake8-annotations.allow-star-arg-any\:"Whether to suppress \`ANN401\` for dynamically typed \`*args\` and \`**kwargs\` arguments."
lint.flake8-annotations.ignore-fully-untyped\:"Whether to suppress \`ANN*\` rules for any declaration that hasn'\''t been typed at all. This makes it easier to gradually add types to a codebase."
lint.flake8-bandit\:"Options for the \`flake8-bandit\` plugin."
lint.flake8-bandit.hardcoded-tmp-directory\:"A list of directories to consider temporary (see \`S108\`)."
lint.flake8-bandit.hardcoded-tmp-directory-extend\:"A list of directories to consider temporary, in addition to those specified by \[\`hardcoded-tmp-directory\`\](#lint_flake8-bandit_hardcoded-tmp-directory) (see \`S108\`)."
lint.flake8-bandit.check-typed-exception\:"Whether to disallow \`try\`-\`except\`-\`pass\` (\`S110\`) for specific exception types. By default, \`try\`-\`except\`-\`pass\` is only disallowed for \`Exception\` and \`BaseException\`."
lint.flake8-bandit.extend-markup-names\:"A list of additional callable names that behave like \[\`markupsafe.Markup\`\](https\://markupsafe.palletsprojects.com/en/stable/escaping/#markupsafe.Markup)."
lint.flake8-bandit.allowed-markup-calls\:"A list of callable names, whose result may be safely passed into \[\`markupsafe.Markup\`\](https\://markupsafe.palletsprojects.com/en/stable/escaping/#markupsafe.Markup)."
lint.flake8-boolean-trap\:"Options for the \`flake8-boolean-trap\` plugin"
lint.flake8-boolean-trap.extend-allowed-calls\:"Additional callable functions with which to allow boolean traps."
lint.flake8-bugbear\:"Options for the \`flake8-bugbear\` plugin."
lint.flake8-bugbear.extend-immutable-calls\:"Additional callable functions to consider '\''immutable'\'' when evaluating, e.g., the \`function-call-in-default-argument\` rule (\`B008\`) or \`function-call-in-dataclass-defaults\` rule (\`RUF009\`)."
lint.flake8-builtins\:"Options for the \`flake8-builtins\` plugin."
lint.flake8-builtins.builtins-ignorelist\:"DEPRECATED\: This option has been renamed to \`ignorelist\`. Use \`ignorelist\` instead."
lint.flake8-builtins.ignorelist\:"Ignore list of builtins."
lint.flake8-builtins.builtins-allowed-modules\:"DEPRECATED\: This option has been renamed to \`allowed-modules\`. Use \`allowed-modules\` instead."
lint.flake8-builtins.allowed-modules\:"List of builtin module names to allow."
lint.flake8-builtins.builtins-strict-checking\:"DEPRECATED\: This option has been renamed to \`strict-checking\`. Use \`strict-checking\` instead."
lint.flake8-builtins.strict-checking\:"Compare module names instead of full module paths."
lint.flake8-comprehensions\:"Options for the \`flake8-comprehensions\` plugin."
lint.flake8-comprehensions.allow-dict-calls-with-keyword-arguments\:"Allow \`dict\` calls that make use of keyword arguments (e.g., \`dict(a=1, b=2)\`)."
lint.flake8-copyright\:"Options for the \`flake8-copyright\` plugin."
lint.flake8-copyright.notice-rgx\:"The regular expression used to match the copyright notice, compiled with the \[\`regex\`\](https\://docs.rs/regex/latest/regex/) crate. Defaults to \`(?i)Copyright\\s+((?\:\\(C\\)|©)\\s+)?\\d{4}((-|,\\s)\\d{4})*\`, which matches the following\:"
lint.flake8-copyright.author\:"Author to enforce within the copyright notice. If provided, the author must be present immediately following the copyright notice."
lint.flake8-copyright.min-file-size\:"A minimum file size (in bytes) required for a copyright notice to be enforced. By default, all files are validated."
lint.flake8-errmsg\:"Options for the \`flake8-errmsg\` plugin."
lint.flake8-errmsg.max-string-length\:"Maximum string length for string literals in exception messages."
lint.flake8-quotes\:"Options for the \`flake8-quotes\` plugin."
lint.flake8-quotes.inline-quotes\:"Quote style to prefer for inline strings (either '\''single'\'' or '\''double'\'')."
lint.flake8-quotes.multiline-quotes\:"Quote style to prefer for multiline strings (either '\''single'\'' or '\''double'\'')."
lint.flake8-quotes.docstring-quotes\:"Quote style to prefer for docstrings (either '\''single'\'' or '\''double'\'')."
lint.flake8-quotes.avoid-escape\:"Whether to avoid using single quotes if a string contains single quotes, or vice-versa with double quotes, as per \[PEP 8\](https\://peps.python.org/pep-0008/#string-quotes). This minimizes the need to escape quotation marks within strings."
lint.flake8-self\:"Options for the \`flake8_self\` plugin."
lint.flake8-self.ignore-names\:"A list of names to ignore when considering \`flake8-self\` violations."
lint.flake8-self.extend-ignore-names\:"Additional names to ignore when considering \`flake8-self\` violations, in addition to those included in \[\`ignore-names\`\](#lint_flake8-self_ignore-names)."
lint.flake8-tidy-imports\:"Options for the \`flake8-tidy-imports\` plugin"
lint.flake8-tidy-imports.ban-relative-imports\:"Whether to ban all relative imports (\`'\''all'\''\`), or only those imports that extend into the parent module or beyond (\`'\''parents'\''\`)."
lint.flake8-tidy-imports.banned-api\:"Specific modules or module members that may not be imported or accessed. Note that this rule is only meant to flag accidental uses, and can be circumvented via \`eval\` or \`importlib\`."
lint.flake8-tidy-imports.banned-module-level-imports\:"List of specific modules that may not be imported at module level, and should instead be imported lazily (e.g., within a function definition, or an \`if TYPE_CHECKING\:\` block, or some other nested context)."
lint.flake8-type-checking\:"Options for the \`flake8-type-checking\` plugin"
lint.flake8-type-checking.strict\:"Enforce \`TC001\`, \`TC002\`, and \`TC003\` rules even when valid runtime imports are present for the same module."
lint.flake8-type-checking.exempt-modules\:"Exempt certain modules from needing to be moved into type-checking blocks."
lint.flake8-type-checking.runtime-evaluated-base-classes\:"Exempt classes that list any of the enumerated classes as a base class from needing to be moved into type-checking blocks."
lint.flake8-type-checking.runtime-evaluated-decorators\:"Exempt classes and functions decorated with any of the enumerated decorators from being moved into type-checking blocks."
lint.flake8-type-checking.quote-annotations\:"Whether to add quotes around type annotations, if doing so would allow the corresponding import to be moved into a type-checking block."
lint.flake8-gettext\:"Options for the \`flake8-gettext\` plugin."
lint.flake8-gettext.function-names\:"The function names to consider as internationalization calls."
lint.flake8-gettext.extend-function-names\:"Additional function names to consider as internationalization calls, in addition to those included in \[\`function-names\`\](#lint_flake8-gettext_function-names)."
lint.flake8-implicit-str-concat\:"Options for the \`flake8-implicit-str-concat\` plugin"
lint.flake8-implicit-str-concat.allow-multiline\:"Whether to allow implicit string concatenations for multiline strings. By default, implicit concatenations of multiline strings are allowed (but continuation lines, delimited with a backslash, are prohibited)."
lint.flake8-import-conventions\:"Options for the \`flake8-import-conventions\` plugin"
lint.flake8-import-conventions.aliases\:"The conventional aliases for imports. These aliases can be extended by the \[\`extend-aliases\`\](#lint_flake8-import-conventions_extend-aliases) option."
lint.flake8-import-conventions.extend-aliases\:"A mapping from module to conventional import alias. These aliases will be added to the \[\`aliases\`\](#lint_flake8-import-conventions_aliases) mapping."
lint.flake8-import-conventions.banned-aliases\:"A mapping from module to its banned import aliases."
lint.flake8-import-conventions.banned-from\:"A list of modules that should not be imported from using the \`from ... import ...\` syntax."
lint.flake8-pytest-style\:"Options for the \`flake8-pytest-style\` plugin"
lint.flake8-pytest-style.fixture-parentheses\:"Boolean flag specifying whether \`@pytest.fixture()\` without parameters should have parentheses. If the option is set to \`false\` (the default), \`@pytest.fixture\` is valid and \`@pytest.fixture()\` is invalid. If set to \`true\`, \`@pytest.fixture()\` is valid and \`@pytest.fixture\` is invalid."
lint.flake8-pytest-style.parametrize-names-type\:"Expected type for multiple argument names in \`@pytest.mark.parametrize\`. The following values are supported\:"
lint.flake8-pytest-style.parametrize-values-type\:"Expected type for the list of values rows in \`@pytest.mark.parametrize\`. The following values are supported\:"
lint.flake8-pytest-style.parametrize-values-row-type\:"Expected type for each row of values in \`@pytest.mark.parametrize\` in case of multiple parameters. The following values are supported\:"
lint.flake8-pytest-style.raises-require-match-for\:"List of exception names that require a match= parameter in a \`pytest.raises()\` call."
lint.flake8-pytest-style.raises-extend-require-match-for\:"List of additional exception names that require a match= parameter in a \`pytest.raises()\` call. This extends the default list of exceptions that require a match= parameter. This option is useful if you want to extend the default list of exceptions that require a match= parameter without having to specify the entire list. Note that this option does not remove any exceptions from the default list."
lint.flake8-pytest-style.mark-parentheses\:"Boolean flag specifying whether \`@pytest.mark.foo()\` without parameters should have parentheses. If the option is set to \`false\` (the default), \`@pytest.mark.foo\` is valid and \`@pytest.mark.foo()\` is invalid. If set to \`true\`, \`@pytest.mark.foo()\` is valid and \`@pytest.mark.foo\` is invalid."
lint.flake8-pytest-style.warns-require-match-for\:"List of warning names that require a match= parameter in a \`pytest.warns()\` call."
lint.flake8-pytest-style.warns-extend-require-match-for\:"List of additional warning names that require a match= parameter in a \`pytest.warns()\` call. This extends the default list of warnings that require a match= parameter."
lint.flake8-unused-arguments\:"Options for the \`flake8-unused-arguments\` plugin"
lint.flake8-unused-arguments.ignore-variadic-names\:"Whether to allow unused variadic arguments, like \`*args\` and \`**kwargs\`."
lint.isort\:"Options for the \`isort\` plugin."
lint.isort.force-wrap-aliases\:"Force \`import from\` statements with multiple members and at least one alias (e.g., \`import A as B\`) to wrap such that every line contains exactly one member. For example, this formatting would be retained, rather than condensing to a single line\:"
lint.isort.force-single-line\:"Forces all from imports to appear on their own line."
lint.isort.single-line-exclusions\:"One or more modules to exclude from the single line rule."
lint.isort.combine-as-imports\:"Combines as imports on the same line. See isort'\''s \[\`combine-as-imports\`\](https\://pycqa.github.io/isort/docs/configuration/options.html#combine-as-imports) option."
lint.isort.split-on-trailing-comma\:"If a comma is placed after the last member in a multi-line import, then the imports will never be folded into one line."
lint.isort.order-by-type\:"Order imports by type, which is determined by case, in addition to alphabetically."
lint.isort.force-sort-within-sections\:"Don'\''t sort straight-style imports (like \`import sys\`) before from-style imports (like \`from itertools import groupby\`). Instead, sort the imports by module, independent of import style."
lint.isort.case-sensitive\:"Sort imports taking into account case sensitivity."
lint.isort.force-to-top\:"Force specific imports to the top of their appropriate section."
lint.isort.known-first-party\:"A list of modules to consider first-party, regardless of whether they can be identified as such via introspection of the local filesystem."
lint.isort.known-third-party\:"A list of modules to consider third-party, regardless of whether they can be identified as such via introspection of the local filesystem."
lint.isort.known-local-folder\:"A list of modules to consider being a local folder. Generally, this is reserved for relative imports (\`from . import module\`)."
lint.isort.extra-standard-library\:"A list of modules to consider standard-library, in addition to those known to Ruff in advance."
lint.isort.relative-imports-order\:"Whether to place '\''closer'\'' imports (fewer \`.\` characters, most local) before '\''further'\'' imports (more \`.\` characters, least local), or vice versa."
lint.isort.required-imports\:"Add the specified import line to all files."
lint.isort.classes\:"An override list of tokens to always recognize as a Class for \[\`order-by-type\`\](#lint_isort_order-by-type) regardless of casing."
lint.isort.constants\:"An override list of tokens to always recognize as a CONSTANT for \[\`order-by-type\`\](#lint_isort_order-by-type) regardless of casing."
lint.isort.variables\:"An override list of tokens to always recognize as a var for \[\`order-by-type\`\](#lint_isort_order-by-type) regardless of casing."
lint.isort.no-lines-before\:"A list of sections that should _not_ be delineated from the previous section via empty lines."
lint.isort.lines-after-imports\:"The number of blank lines to place after imports. Use \`-1\` for automatic determination."
lint.isort.lines-between-types\:"The number of lines to place between '\''direct'\'' and \`import from\` imports."
lint.isort.forced-separate\:"A list of modules to separate into auxiliary block(s) of imports, in the order specified."
lint.isort.section-order\:"Override in which order the sections should be output. Can be used to move custom sections."
lint.isort.default-section\:"Define a default section for any imports that don'\''t fit into the specified \[\`section-order\`\](#lint_isort_section-order)."
lint.isort.no-sections\:"Put all imports into the same section bucket."
lint.isort.detect-same-package\:"Whether to automatically mark imports from within the same package as first-party. For example, when \`detect-same-package = true\`, then when analyzing files within the \`foo\` package, any imports from within the \`foo\` package will be considered first-party."
lint.isort.from-first\:"Whether to place \`import from\` imports before straight imports when sorting."
lint.isort.length-sort\:"Sort imports by their string length, such that shorter imports appear before longer imports. For example, by default, imports will be sorted alphabetically, as in\: \`\`\`python import collections import os \`\`\`"
lint.isort.length-sort-straight\:"Sort straight imports by their string length. Similar to \[\`length-sort\`\](#lint_isort_length-sort), but applies only to straight imports and doesn'\''t affect \`from\` imports."
lint.isort.sections\:"A list of mappings from section names to modules."
lint.mccabe\:"Options for the \`mccabe\` plugin."
lint.mccabe.max-complexity\:"The maximum McCabe complexity to allow before triggering \`C901\` errors."
lint.pep8-naming\:"Options for the \`pep8-naming\` plugin."
lint.pep8-naming.ignore-names\:"A list of names (or patterns) to ignore when considering \`pep8-naming\` violations."
lint.pep8-naming.extend-ignore-names\:"Additional names (or patterns) to ignore when considering \`pep8-naming\` violations, in addition to those included in \[\`ignore-names\`\](#lint_pep8-naming_ignore-names)."
lint.pep8-naming.classmethod-decorators\:"A list of decorators that, when applied to a method, indicate that the method should be treated as a class method (in addition to the builtin \`@classmethod\`)."
lint.pep8-naming.staticmethod-decorators\:"A list of decorators that, when applied to a method, indicate that the method should be treated as a static method (in addition to the builtin \`@staticmethod\`)."
lint.pycodestyle\:"Options for the \`pycodestyle\` plugin."
lint.pycodestyle.max-line-length\:"The maximum line length to allow for \[\`line-too-long\`\](https\://docs.astral.sh/ruff/rules/line-too-long/) violations. By default, this is set to the value of the \[\`line-length\`\](#line-length) option."
lint.pycodestyle.max-doc-length\:"The maximum line length to allow for \[\`doc-line-too-long\`\](https\://docs.astral.sh/ruff/rules/doc-line-too-long/) violations within documentation (\`W505\`), including standalone comments. By default, this is set to \`null\` which disables reporting violations."
lint.pycodestyle.ignore-overlong-task-comments\:"Whether line-length violations (\`E501\`) should be triggered for comments starting with \[\`task-tags\`\](#lint_task-tags) (by default\: '\''TODO'\'', '\''FIXME'\'', and '\''XXX'\'')."
lint.pydocstyle\:"Options for the \`pydocstyle\` plugin."
lint.pydocstyle.convention\:"Whether to use Google-style, NumPy-style conventions, or the \[PEP 257\](https\://peps.python.org/pep-0257/) defaults when analyzing docstring sections."
lint.pydocstyle.ignore-decorators\:"Ignore docstrings for functions or methods decorated with the specified fully-qualified decorators."
lint.pydocstyle.property-decorators\:"A list of decorators that, when applied to a method, indicate that the method should be treated as a property (in addition to the builtin \`@property\` and standard-library \`@functools.cached_property\`)."
lint.pydocstyle.ignore-var-parameters\:"If set to \`true\`, ignore missing documentation for \`*args\` and \`**kwargs\` parameters."
lint.pyflakes\:"Options for the \`pyflakes\` plugin."
lint.pyflakes.extend-generics\:"Additional functions or classes to consider generic, such that any subscripts should be treated as type annotation (e.g., \`ForeignKey\` in \`django.db.models.ForeignKey\['\''User'\''\]\`."
lint.pyflakes.allowed-unused-imports\:"A list of modules to ignore when considering unused imports."
lint.pylint\:"Options for the \`pylint\` plugin."
lint.pylint.allow-magic-value-types\:"Constant types to ignore when used as '\''magic values'\'' (see \`PLR2004\`)."
lint.pylint.allow-dunder-method-names\:"Dunder methods name to allow, in addition to the default set from the Python standard library (see \`PLW3201\`)."
lint.pylint.max-branches\:"Maximum number of branches allowed for a function or method body (see \`PLR0912\`)."
lint.pylint.max-returns\:"Maximum number of return statements allowed for a function or method body (see \`PLR0911\`)"
lint.pylint.max-args\:"Maximum number of arguments allowed for a function or method definition (see \`PLR0913\`)."
lint.pylint.max-positional-args\:"Maximum number of positional arguments allowed for a function or method definition (see \`PLR0917\`)."
lint.pylint.max-locals\:"Maximum number of local variables allowed for a function or method body (see \`PLR0914\`)."
lint.pylint.max-statements\:"Maximum number of statements allowed for a function or method body (see \`PLR0915\`)."
lint.pylint.max-public-methods\:"Maximum number of public methods allowed for a class (see \`PLR0904\`)."
lint.pylint.max-bool-expr\:"Maximum number of Boolean expressions allowed within a single \`if\` statement (see \`PLR0916\`)."
lint.pylint.max-nested-blocks\:"Maximum number of nested blocks allowed within a function or method body (see \`PLR1702\`)."
lint.pyupgrade\:"Options for the \`pyupgrade\` plugin."
lint.pyupgrade.keep-runtime-typing\:"Whether to avoid \[PEP 585\](https\://peps.python.org/pep-0585/) (\`List\[int\]\` -> \`list\[int\]\`) and \[PEP 604\](https\://peps.python.org/pep-0604/) (\`Union\[str, int\]\` -> \`str | int\`) rewrites even if a file imports \`from __future__ import annotations\`."
lint.per-file-ignores\:"A list of mappings from file pattern to rule codes or prefixes to exclude, when considering any matching files. An initial '\''!'\'' negates the file pattern."
lint.extend-per-file-ignores\:"A list of mappings from file pattern to rule codes or prefixes to exclude, in addition to any rules excluded by \[\`per-file-ignores\`\](#lint_per-file-ignores)."
lint.exclude\:"A list of file patterns to exclude from linting in addition to the files excluded globally (see \[\`exclude\`\](#exclude), and \[\`extend-exclude\`\](#extend-exclude))."
lint.pydoclint\:"Options for the \`pydoclint\` plugin."
lint.pydoclint.ignore-one-line-docstrings\:"Skip docstrings which fit on a single line."
lint.ruff\:"Options for the \`ruff\` plugin"
lint.ruff.parenthesize-tuple-in-subscript\:"Whether to prefer accessing items keyed by tuples with parentheses around the tuple (see \`RUF031\`)."
lint.ruff.extend-markup-names\:"A list of additional callable names that behave like \[\`markupsafe.Markup\`\](https\://markupsafe.palletsprojects.com/en/stable/escaping/#markupsafe.Markup)."
lint.ruff.allowed-markup-calls\:"A list of callable names, whose result may be safely passed into \[\`markupsafe.Markup\`\](https\://markupsafe.palletsprojects.com/en/stable/escaping/#markupsafe.Markup)."
lint.preview\:"Whether to enable preview mode. When preview mode is enabled, Ruff will use unstable rules and fixes."
lint.typing-extensions\:"Whether to allow imports from the third-party \`typing_extensions\` module for Python versions before a symbol was added to the first-party \`typing\` module."
format\:"Configures the way Ruff formats your code."
format.exclude\:"A list of file patterns to exclude from formatting in addition to the files excluded globally (see \[\`exclude\`\](#exclude), and \[\`extend-exclude\`\](#extend-exclude))."
format.preview\:"Whether to enable the unstable preview style formatting."
format.indent-style\:"Whether to use spaces or tabs for indentation."
format.quote-style\:"Configures the preferred quote character for strings. The recommended options are"
format.skip-magic-trailing-comma\:"Ruff uses existing trailing commas as an indication that short lines should be left separate. If this option is set to \`true\`, the magic trailing comma is ignored."
format.line-ending\:"The character Ruff uses at the end of a line."
format.docstring-code-format\:"Whether to format code snippets in docstrings."
format.docstring-code-line-length\:"Set the line length used when formatting code snippets in docstrings."
analyze\:"Configures Ruff'\''s \`analyze\` command."
analyze.exclude\:"A list of file patterns to exclude from analysis in addition to the files excluded globally (see \[\`exclude\`\](#exclude), and \[\`extend-exclude\`\](#extend-exclude))."
analyze.preview\:"Whether to enable preview mode. When preview mode is enabled, Ruff will expose unstable commands."
analyze.direction\:"Whether to generate a map from file to files that it depends on (dependencies) or files that depend on it (dependents)."
analyze.detect-string-imports\:"Whether to detect imports from string literals. When enabled, Ruff will search for string literals that '\''look like'\'' import paths, and include them in the import map, if they resolve to valid Python modules."
analyze.include-dependencies\:"A map from file path to the list of Python or non-Python file paths or globs that should be considered dependencies of that file, regardless of whether relevant imports are detected."))' \
&& ret=0
;;
(linter)
_arguments "${_arguments_options[@]}" : \
'--output-format=[Output format]:OUTPUT_FORMAT:(text json)' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(clean)
_arguments "${_arguments_options[@]}" : \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(generate-shell-completion)
_arguments "${_arguments_options[@]}" : \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
':shell:(bash elvish fish nushell powershell zsh)' \
&& ret=0
;;
(format)
_arguments "${_arguments_options[@]}" : \
'--cache-dir=[Path to the cache directory]:CACHE_DIR:_files' \
'*--exclude=[List of paths, used to omit files and/or directories from analysis]:FILE_PATTERN:_default' \
'--line-length=[Set the line-length]:LINE_LENGTH:_default' \
'--stdin-filename=[The name of the file when passing it through stdin]:STDIN_FILENAME:_files' \
'*--extension=[List of mappings from file extension to language (one of \`python\`, \`ipynb\`, \`pyi\`). For example, to treat \`.ipy\` files as IPython notebooks, use \`--extension ipy\:ipynb\`]:EXTENSION:_default' \
'--target-version=[The minimum Python version that should be supported]:TARGET_VERSION:(py37 py38 py39 py310 py311 py312 py313 py314)' \
'--range=[When specified, Ruff will try to only format the code in the given range. It might be necessary to extend the start backwards or the end forwards, to fully enclose a logical line. The \`<RANGE>\` uses the format \`<start_line>\:<start_column>-<end_line>\:<end_column>\`.]:RANGE:_default' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'--check[Avoid writing any formatted files back; instead, exit with a non-zero status code if any files would have been modified, and zero otherwise]' \
'--diff[Avoid writing any formatted files back; instead, exit with a non-zero status code and the difference between the current file and how the formatted file would look like]' \
'-n[Disable cache reads]' \
'--no-cache[Disable cache reads]' \
'--respect-gitignore[Respect file exclusions via \`.gitignore\` and other standard ignore files. Use \`--no-respect-gitignore\` to disable]' \
'--no-respect-gitignore[]' \
'--force-exclude[Enforce exclusions, even for paths passed to Ruff directly on the command-line. Use \`--no-force-exclude\` to disable]' \
'--no-force-exclude[]' \
'--preview[Enable preview mode; enables unstable formatting. Use \`--no-preview\` to disable]' \
'--no-preview[]' \
'--exit-non-zero-on-format[Exit with a non-zero status code if any files were modified via format, even if all files were formatted successfully]' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'*::files -- List of files or directories to format \[default\: .\]:_files' \
&& ret=0
;;
(server)
_arguments "${_arguments_options[@]}" : \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'--preview[Enable preview mode. Use \`--no-preview\` to disable]' \
'--no-preview[]' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
&& ret=0
;;
(analyze)
_arguments "${_arguments_options[@]}" : \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_ruff__analyze_commands" \
"*::: :->analyze" \
&& ret=0

    case $state in
    (analyze)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ruff-analyze-command-$line[1]:"
        case $line[1] in
            (graph)
_arguments "${_arguments_options[@]}" : \
'--direction=[The direction of the import map. By default, generates a dependency map, i.e., a map from file to files that it depends on. Use \`--direction dependents\` to generate a map from file to files that depend on it]:DIRECTION:((dependencies\:"Construct a map from module to its dependencies (i.e., the modules that it imports)"
dependents\:"Construct a map from module to its dependents (i.e., the modules that import it)"))' \
'--target-version=[The minimum Python version that should be supported]:TARGET_VERSION:(py37 py38 py39 py310 py311 py312 py313 py314)' \
'--python=[Path to a virtual environment to use for resolving additional dependencies]:PYTHON:_files' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'--detect-string-imports[Attempt to detect imports from string literals]' \
'--preview[Enable preview mode. Use \`--no-preview\` to disable]' \
'--no-preview[]' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'*::files -- List of files or directories to include \[default\: .\]:_files' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_ruff__analyze__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ruff-analyze-help-command-$line[1]:"
        case $line[1] in
            (graph)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(version)
_arguments "${_arguments_options[@]}" : \
'--output-format=[]:OUTPUT_FORMAT:(text json)' \
'*--config=[Either a path to a TOML configuration file (\`pyproject.toml\` or \`ruff.toml\`), or a TOML \`<KEY> = <VALUE>\` pair (such as you might find in a \`ruff.toml\` configuration file) overriding a specific configuration option. Overrides of individual settings using this option always take precedence over all configuration files, including configuration files that were also specified using \`--config\`]:CONFIG_OPTION:_default' \
'-v[Enable verbose logging]' \
'--verbose[Enable verbose logging]' \
'-q[Print diagnostics, but nothing else]' \
'--quiet[Print diagnostics, but nothing else]' \
'-s[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--silent[Disable all logging (but still exit with status code "1" upon detecting diagnostics)]' \
'--isolated[Ignore all configuration files]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_ruff__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ruff-help-command-$line[1]:"
        case $line[1] in
            (check)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rule)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(config)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(linter)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(clean)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(generate-shell-completion)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(format)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(server)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(analyze)
_arguments "${_arguments_options[@]}" : \
":: :_ruff__help__analyze_commands" \
"*::: :->analyze" \
&& ret=0

    case $state in
    (analyze)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ruff-help-analyze-command-$line[1]:"
        case $line[1] in
            (graph)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(version)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_ruff_commands] )) ||
_ruff_commands() {
    local commands; commands=(
'check:Run Ruff on the given files or directories' \
'rule:Explain a rule (or all rules)' \
'config:List or describe the available configuration options' \
'linter:List all supported upstream linters' \
'clean:Clear any caches in the current directory and any subdirectories' \
'generate-shell-completion:Generate shell completion' \
'format:Run the Ruff formatter on the given files or directories' \
'server:Run the language server' \
'analyze:Run analysis over Python source code' \
'version:Display Ruff'\''s version' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ruff commands' commands "$@"
}
(( $+functions[_ruff__analyze_commands] )) ||
_ruff__analyze_commands() {
    local commands; commands=(
'graph:Generate a map of Python file dependencies or dependents' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ruff analyze commands' commands "$@"
}
(( $+functions[_ruff__analyze__graph_commands] )) ||
_ruff__analyze__graph_commands() {
    local commands; commands=()
    _describe -t commands 'ruff analyze graph commands' commands "$@"
}
(( $+functions[_ruff__analyze__help_commands] )) ||
_ruff__analyze__help_commands() {
    local commands; commands=(
'graph:Generate a map of Python file dependencies or dependents' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ruff analyze help commands' commands "$@"
}
(( $+functions[_ruff__analyze__help__graph_commands] )) ||
_ruff__analyze__help__graph_commands() {
    local commands; commands=()
    _describe -t commands 'ruff analyze help graph commands' commands "$@"
}
(( $+functions[_ruff__analyze__help__help_commands] )) ||
_ruff__analyze__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'ruff analyze help help commands' commands "$@"
}
(( $+functions[_ruff__check_commands] )) ||
_ruff__check_commands() {
    local commands; commands=()
    _describe -t commands 'ruff check commands' commands "$@"
}
(( $+functions[_ruff__clean_commands] )) ||
_ruff__clean_commands() {
    local commands; commands=()
    _describe -t commands 'ruff clean commands' commands "$@"
}
(( $+functions[_ruff__config_commands] )) ||
_ruff__config_commands() {
    local commands; commands=()
    _describe -t commands 'ruff config commands' commands "$@"
}
(( $+functions[_ruff__format_commands] )) ||
_ruff__format_commands() {
    local commands; commands=()
    _describe -t commands 'ruff format commands' commands "$@"
}
(( $+functions[_ruff__generate-shell-completion_commands] )) ||
_ruff__generate-shell-completion_commands() {
    local commands; commands=()
    _describe -t commands 'ruff generate-shell-completion commands' commands "$@"
}
(( $+functions[_ruff__help_commands] )) ||
_ruff__help_commands() {
    local commands; commands=(
'check:Run Ruff on the given files or directories' \
'rule:Explain a rule (or all rules)' \
'config:List or describe the available configuration options' \
'linter:List all supported upstream linters' \
'clean:Clear any caches in the current directory and any subdirectories' \
'generate-shell-completion:Generate shell completion' \
'format:Run the Ruff formatter on the given files or directories' \
'server:Run the language server' \
'analyze:Run analysis over Python source code' \
'version:Display Ruff'\''s version' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ruff help commands' commands "$@"
}
(( $+functions[_ruff__help__analyze_commands] )) ||
_ruff__help__analyze_commands() {
    local commands; commands=(
'graph:Generate a map of Python file dependencies or dependents' \
    )
    _describe -t commands 'ruff help analyze commands' commands "$@"
}
(( $+functions[_ruff__help__analyze__graph_commands] )) ||
_ruff__help__analyze__graph_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help analyze graph commands' commands "$@"
}
(( $+functions[_ruff__help__check_commands] )) ||
_ruff__help__check_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help check commands' commands "$@"
}
(( $+functions[_ruff__help__clean_commands] )) ||
_ruff__help__clean_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help clean commands' commands "$@"
}
(( $+functions[_ruff__help__config_commands] )) ||
_ruff__help__config_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help config commands' commands "$@"
}
(( $+functions[_ruff__help__format_commands] )) ||
_ruff__help__format_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help format commands' commands "$@"
}
(( $+functions[_ruff__help__generate-shell-completion_commands] )) ||
_ruff__help__generate-shell-completion_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help generate-shell-completion commands' commands "$@"
}
(( $+functions[_ruff__help__help_commands] )) ||
_ruff__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help help commands' commands "$@"
}
(( $+functions[_ruff__help__linter_commands] )) ||
_ruff__help__linter_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help linter commands' commands "$@"
}
(( $+functions[_ruff__help__rule_commands] )) ||
_ruff__help__rule_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help rule commands' commands "$@"
}
(( $+functions[_ruff__help__server_commands] )) ||
_ruff__help__server_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help server commands' commands "$@"
}
(( $+functions[_ruff__help__version_commands] )) ||
_ruff__help__version_commands() {
    local commands; commands=()
    _describe -t commands 'ruff help version commands' commands "$@"
}
(( $+functions[_ruff__linter_commands] )) ||
_ruff__linter_commands() {
    local commands; commands=()
    _describe -t commands 'ruff linter commands' commands "$@"
}
(( $+functions[_ruff__rule_commands] )) ||
_ruff__rule_commands() {
    local commands; commands=()
    _describe -t commands 'ruff rule commands' commands "$@"
}
(( $+functions[_ruff__server_commands] )) ||
_ruff__server_commands() {
    local commands; commands=()
    _describe -t commands 'ruff server commands' commands "$@"
}
(( $+functions[_ruff__version_commands] )) ||
_ruff__version_commands() {
    local commands; commands=()
    _describe -t commands 'ruff version commands' commands "$@"
}

if [ "$funcstack[1]" = "_ruff" ]; then
    _ruff "$@"
else
    compdef _ruff ruff
fi
